Anope for Windows
-----------------

1) Building the Source
2) Installation
3) Compiling Modules
4) Other compile options
5) Credits

1) Building the Source

    NOTE: If you have downloaded one of the pre-compiled installers, you do
          NOT need to complete this step, and you can proceed to step 2.

    If you want to build Anope from source on a Win32 system, you will need
    to follow this instructions:

    1) Download the required files:

        * Current Anope source:
            https://github.com/anope/anope/releases

        * CMake:
            https://cmake.org/download/

        (NOTE: When installing, tell CMake to add itself to the PATH.)

        If you have Visual C++ 10 or 11 (2010/2012) skip ahead to step 2, else you
        need to download and install the following free component from Microsoft.

        * Microsoft Visual C++ 2010 Express Edition:
            http://www.microsoft.com/visualstudio/eng/downloads#d-2010-express

    2) Unpack the Anope tarball with your favorite uncompression program
       (WinZip or WinRAR, etc).

    3) Bring up the Visual C++ Command Prompt; This will launch a
       DOS Command Prompt like window, which will set the environment
       properties needed to make Anope.

       Create a new directory, which will be used to hold the build files. You can make it
       be a directory under the source directory unpacked in step 2, or somewhere else entirely.

       Change directories to this new folder, by typing:

          cd <path to build directory>

          e.g.

          cd c:\anope-build

    4) You now need to configure Anope to your requirements. At the prompt type:

        <path to source directory>\Config.exe

       NOTE: If you run an Anti-Virus program such as McAfee or Norton, you may
       be unable to run this command due to the protection in place. Some Anti-
       Virus programs may detect the Anope Configuration Tool as a worm, however
       this is not the case. If you are prompted to allow or deny execution of
       the script, you should choose allow. If the script fails to run, and no
       notice is displayed, please check your Anti-Virus settings before seeking
       assistance.

       An interactive configuration program should guide you through the install
       options. You will be given a choice to use NMake or not. NMake will compile
       inside the command prompt window you are in. If you want to build within
       the Visual C++ IDE, say no to that option, and it'll create a Solution for
       you to open up.

       If you cannot find whats causing the error, please visit our forums or
       our IRC Support channel for assistance.

       Some Anope modules require third party libraries, such as m_mysql and
       the SSL modules. If these libraries are installed in nonstandard
       locations, cmake will probably not find them and should be told where
       they are by passing their location to Config.

       The libraries used to build the 'extra' modules are available at
       https://github.com/Adam-/windows-scripts.

    5) You are now ready to compile. If you said you wanted to use NMake in step 4,
       at the prompt type:

        nmake

       Once you are back at the command prompt again, if there have been no
       errors, you are ready to go.

       If instead you decided to use the Visual C++ IDE, open up the Anope.sln
       file. After the IDE has fully loaded, hit F7 to build everything.

       Should you encounter errors with the installation process, check the
       messages displayed for advice on resolving them. If you are unable to
       resolve the issues yourself, seek assistance on our forums or in our
       IRC Support channel.

    6) Finally you will need to install Anope. If you said you wanted to use NMake
       in step 4, at the prompt type:

        nmake install

       Otherwise, if you decided to use the Visual C++ IDE, find the project called
       INSTALL within the Solution Explorer. Right-click on INSTALL and choose Build.

       When you have done this, all the files will be installed to where they belong.
       The only thing you need to do is rename "data/example.conf" to be "data/services.conf",
       and then follow the steps to set up Anope.

    You have now completed the building phase of Anope for Windows. You can
    now move on to the next section, which is related to setting up Anope.

2) Installation

    Since Anope for Windows does not use a visual interface, you must do the
    configuration with a text editor before proceeding with running Anope
    itself.

    NOTE: You may need to open the configuration file with Wordpad, or a text
    editor which supports UNIX line endings. Opening the configuration file in
    Notepad will cause strange characters to appear, and you may not be able to
    edit the file correctly.

    Open services.conf, and read through it carefully and adjust the settings
    you think you need to adjust.

    If you are unsure of the settings, you can go to the dos command prompt
    and run "anope.exe --nofork --debug" and watch the information as it
    attempts to connect.

    You can launch services in two ways. If you are sure that the entered
    configuration information is correct, simply double clicking the Anope
    executable will cause it to start; no window will pop up. If you'd rather
    have a more textual output, you can start at the dos prompt and type in
    "anope.exe". If services are successfully started up the dos prompt will
    seem to hang; at this point you can safely close the dos window.

3) Compiling Modules

    If you want to build other modules than the ones shipped by default, you
    will need to rerun Config.exe

4) Other compile options

    A) If you have trouble recompiling Anope, you should delete all files and folders
       within the build folder you created in step 3 of section 1. Afterwards, follow
       the directions from step 4 of section 1 down.

5) Credits

    Anope is based on Epona and IRCServices. See CREDITS for more credits and
    a complete list of all developers.

    Anope's Windows-specific code is provided by:

        * Dominick Meglio       <codemastr@unrealircd.com>
        * Trystan Scott Lee     <trystan@nomadirc.net>
        * Chris Hogben          <heinz@anope.org>

    Anope's Windows Installer was made using:

        * NSIS 2.20          <http://nsis.sourceforge.net>
